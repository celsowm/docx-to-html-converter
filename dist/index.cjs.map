{"version":3,"sources":["../src/index.js","../src/DocxToHtmlConverter.js"],"sourcesContent":["import DocxToHtmlConverter from \"./DocxToHtmlConverter.js\";\r\nexport default DocxToHtmlConverter;\r\nexport { DocxToHtmlConverter };\r\n","import JSZip from \"jszip\";\r\nimport { XMLParser as DefaultXMLParser } from \"fast-xml-parser\";\r\n\r\nexport default class DocxToHtmlConverter {\r\n    /**\r\n     * @param {any} zip Instância do JSZip já carregada (usada no create)\r\n     * @param {Function} ParserClass Classe do parser opcional para override\r\n     */\r\n    constructor(zip, ParserClass) {\r\n        this.zip = zip;\r\n\r\n        // estado\r\n        this.relationships = null;\r\n        this.numbering = null;\r\n        this.globalStyles = {};\r\n        this.docDefaults = { pPr: [], rPr: [] };\r\n        this.listState = { stack: [] };\r\n        this.listCounters = {};\r\n\r\n        const Parser = ParserClass || DefaultXMLParser;\r\n\r\n        this.parser = new Parser({\r\n            preserveOrder: true,\r\n            ignoreDeclaration: true,\r\n            ignoreAttributes: false,\r\n            attributeNamePrefix: \"@_\",\r\n            textNodeName: \"##text\",\r\n            trimValues: false,\r\n        });\r\n    }\r\n\r\n    static async create(arrayBuffer, ParserClass) {\r\n        if (!arrayBuffer) throw new Error(\"O arquivo está vazio ou corrompido.\");\r\n        const zip = await JSZip.loadAsync(arrayBuffer);\r\n        const converter = new DocxToHtmlConverter(zip, ParserClass);\r\n        await converter.loadRelationships();\r\n        await converter.loadNumbering();\r\n        await converter.loadStyles();\r\n        return converter;\r\n    }\r\n\r\n    // Map DOCX numFmt → CSS list-style-type\r\n    static NUMFMT_TO_CSS = {\r\n        decimal: 'decimal',\r\n        decimalZero: 'decimal',\r\n        lowerRoman: 'lower-roman',\r\n        upperRoman: 'upper-roman',\r\n        lowerLetter: 'lower-alpha',\r\n        upperLetter: 'upper-alpha',\r\n        bullet: 'disc'\r\n    };\r\n\r\n    mergeProperties(baseProps = [], derivedProps = []) {\r\n        const propsMap = new Map();\r\n\r\n        baseProps.forEach(prop => {\r\n            const key = Object.keys(prop)[0];\r\n            if (key !== ':@') {\r\n                propsMap.set(key, prop);\r\n            }\r\n        });\r\n\r\n        derivedProps.forEach(prop => {\r\n            const key = Object.keys(prop)[0];\r\n            if (key !== ':@') {\r\n                propsMap.set(key, prop);\r\n            }\r\n        });\r\n\r\n        return Array.from(propsMap.values());\r\n    }\r\n\r\n    mergeStyleObjects(baseStyle = {}, derivedStyle = {}) {\r\n        return {\r\n            pPr: this.mergeProperties(baseStyle.pPr, derivedStyle.pPr),\r\n            rPr: this.mergeProperties(baseStyle.rPr, derivedStyle.rPr),\r\n            tblPr: this.mergeProperties(baseStyle.tblPr, derivedStyle.tblPr),\r\n        };\r\n    }\r\n\r\n    async loadStyles() {\r\n        const stylesFile = this.zip.file(\"word/styles.xml\");\r\n        if (!stylesFile) return;\r\n\r\n        const xmlContent = await stylesFile.async(\"string\");\r\n        const jsonObj = this.parser.parse(xmlContent);\r\n        const stylesNode = this.findChild(jsonObj, \"w:styles\");\r\n        if (!stylesNode) return;\r\n\r\n        const docDefaultsNode = this.findChild(stylesNode[\"w:styles\"], \"w:docDefaults\");\r\n        if (docDefaultsNode) {\r\n            const rPrDefaultNode = this.findChild(docDefaultsNode[\"w:docDefaults\"], \"w:rPrDefault\");\r\n            if (rPrDefaultNode) {\r\n                const rPr = this.findChild(rPrDefaultNode[\"w:rPrDefault\"], \"w:rPr\");\r\n                if (rPr) this.docDefaults.rPr = rPr[\"w:rPr\"];\r\n            }\r\n            const pPrDefaultNode = this.findChild(docDefaultsNode[\"w:docDefaults\"], \"w:pPrDefault\");\r\n            if (pPrDefaultNode) {\r\n                const pPr = this.findChild(pPrDefaultNode[\"w:pPrDefault\"], \"w:pPr\");\r\n                if (pPr) this.docDefaults.pPr = pPr[\"w:pPr\"];\r\n            }\r\n        }\r\n\r\n        const styleNodes = this.filterChildren(stylesNode[\"w:styles\"], \"w:style\");\r\n        const rawStyles = {};\r\n\r\n        styleNodes.forEach(styleNode => {\r\n            const attrs = styleNode[\":@\"];\r\n            if (!attrs || !attrs[\"@_w:styleId\"]) return;\r\n\r\n            const styleId = attrs[\"@_w:styleId\"];\r\n            const styleChildren = styleNode[\"w:style\"];\r\n\r\n            const pPrNode = this.findChild(styleChildren, \"w:pPr\");\r\n            const rPrNode = this.findChild(styleChildren, \"w:rPr\");\r\n            const tblPrNode = this.findChild(styleChildren, \"w:tblPr\");\r\n            const basedOnNode = this.findChild(styleChildren, \"w:basedOn\");\r\n            const linkNode = this.findChild(styleChildren, \"w:link\");\r\n\r\n            const basedOnId = basedOnNode ? basedOnNode[':@']['@_w:val'] : null;\r\n            const linkId = linkNode ? linkNode[':@']['@_w:val'] : null;\r\n\r\n            rawStyles[styleId] = {\r\n                basedOn: basedOnId,\r\n                link: linkId,\r\n                pPr: pPrNode ? pPrNode[\"w:pPr\"] : [],\r\n                rPr: rPrNode ? rPrNode[\"w:rPr\"] : [],\r\n                tblPr: tblPrNode ? tblPrNode[\"w:tblPr\"] : [],\r\n            };\r\n        });\r\n\r\n        const styleIds = Object.keys(rawStyles);\r\n        for (const styleId of styleIds) {\r\n            this.resolveStyle(styleId, rawStyles);\r\n        }\r\n    }\r\n\r\n    resolveStyle(styleId, rawStyles) {\r\n        if (this.globalStyles[styleId]) {\r\n            return this.globalStyles[styleId];\r\n        }\r\n\r\n        const styleData = rawStyles[styleId];\r\n        if (!styleData) {\r\n            return { pPr: [], rPr: [], tblPr: [] };\r\n        }\r\n\r\n        let baseStyle = { pPr: [], rPr: [], tblPr: [] };\r\n        if (styleData.basedOn) {\r\n            baseStyle = this.resolveStyle(styleData.basedOn, rawStyles);\r\n        }\r\n\r\n        const resolvedStyle = this.mergeStyleObjects(baseStyle, styleData);\r\n        this.globalStyles[styleId] = resolvedStyle;\r\n        return resolvedStyle;\r\n    }\r\n\r\n    extractFileNameFromPath(path) {\r\n        const parts = path.split(/[\\\\/]/);\r\n        return parts[parts.length - 1];\r\n    }\r\n\r\n    extractAnchorFileName(anchorText) {\r\n        let fileName = anchorText;\r\n        try {\r\n            const firstPart = anchorText.split(',')[0];\r\n            const cleaned = firstPart.replace(/[^a-zA-Z0-9._-]/g, '');\r\n            fileName = cleaned;\r\n        } catch (e) { }\r\n        return fileName;\r\n    }\r\n\r\n    async convert(options = { extractPageStyles: true }) {\r\n        const file = this.zip.file(\"word/document.xml\");\r\n        if (!file) throw new Error(\"document.xml não encontrado.\");\r\n        const xmlContent = await file.async(\"string\");\r\n        const jsonObj = this.parser.parse(xmlContent);\r\n        const documentNode = jsonObj.find(node => node[\"w:document\"]);\r\n        if (!documentNode) throw new Error(\"Estrutura inesperada: w:document não encontrado.\");\r\n        const bodyNode = this.findChild(documentNode[\"w:document\"], \"w:body\");\r\n        if (!bodyNode) throw new Error(\"w:body não encontrado.\");\r\n\r\n        const bodyChildren = bodyNode[\"w:body\"];\r\n\r\n        let pageStyles = null;\r\n        let pageStylesCss = null;\r\n        if (options.extractPageStyles) {\r\n            const lastSectPrNode = this.findChild(bodyChildren, \"w:sectPr\");\r\n            if (lastSectPrNode) {\r\n                pageStyles = this.getPageStylesAsObject(lastSectPrNode[\"w:sectPr\"]);\r\n                pageStylesCss = DocxToHtmlConverter.formatCssFromStyles(pageStyles);\r\n            }\r\n        }\r\n\r\n        const sections = [];\r\n        let currentSectionChildren = [];\r\n        const lastSectPrNode = this.findChild(bodyChildren, \"w:sectPr\");\r\n        const lastSectPr = lastSectPrNode ? lastSectPrNode[\"w:sectPr\"] : null;\r\n\r\n        for (const child of bodyChildren) {\r\n            const nodeName = Object.keys(child)[0];\r\n            if (nodeName === 'w:p') {\r\n                const pPrNode = this.findChild(child['w:p'], 'w:pPr');\r\n                if (pPrNode) {\r\n                    const sectPrNode = this.findChild(pPrNode['w:pPr'], 'w:sectPr');\r\n                    if (sectPrNode) {\r\n                        sections.push({ children: currentSectionChildren, sectPr: sectPrNode['w:sectPr'] });\r\n                        currentSectionChildren = [];\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            if (nodeName === 'w:sectPr') continue;\r\n            currentSectionChildren.push(child);\r\n        }\r\n\r\n        if (currentSectionChildren.length > 0 || sections.length === 0) {\r\n            sections.push({ children: currentSectionChildren, sectPr: lastSectPr });\r\n        }\r\n\r\n        let htmlContent = \"\";\r\n        for (const section of sections) {\r\n            const sectionHtml = await this.processChildren(section.children);\r\n            const sectionStyle = this.getSectionStyles(section.sectPr);\r\n            const styleAttr = sectionStyle ? ` style=\"${sectionStyle}\"` : \"\";\r\n            if (sectionHtml.trim()) {\r\n                htmlContent += `<div class=\"docx-section\"${styleAttr}>${sectionHtml}</div>`;\r\n            }\r\n        }\r\n\r\n        htmlContent = htmlContent.replace(/<(h[1-6]|p)>\\s*<\\/\\1>/g, \"<$1> </$1>\");\r\n\r\n        return {\r\n            html: `<div class=\"docx\">${htmlContent}</div>`,\r\n            pageStyles: pageStyles,\r\n            pageStylesCss: pageStylesCss\r\n        };\r\n    }\r\n\r\n    getPageStylesAsObject(sectPr) {\r\n        if (!sectPr) return null;\r\n\r\n        const styles = {\r\n            size: { width: null, height: null, orientation: 'portrait' },\r\n            margin: { top: null, right: null, bottom: null, left: null },\r\n            units: 'pt'\r\n        };\r\n\r\n        const pgSzNode = this.findChild(sectPr, \"w:pgSz\");\r\n        if (pgSzNode && pgSzNode[\":@\"]) {\r\n            const attrs = pgSzNode[\":@\"];\r\n            const width = parseInt(attrs[\"@_w:w\"], 10) / 20;\r\n            const height = parseInt(attrs[\"@_w:h\"], 10) / 20;\r\n            if (!isNaN(width)) styles.size.width = width;\r\n            if (!isNaN(height)) styles.size.height = height;\r\n            if (attrs[\"@_w:orient\"] === \"landscape\") {\r\n                styles.size.orientation = \"landscape\";\r\n            }\r\n        }\r\n\r\n        const pgMarNode = this.findChild(sectPr, \"w:pgMar\");\r\n        if (pgMarNode && pgMarNode[\":@\"]) {\r\n            const attrs = pgMarNode[\":@\"];\r\n            const sides = [\"top\", \"right\", \"bottom\", \"left\"];\r\n            sides.forEach(side => {\r\n                if (attrs[`@_w:${side}`]) {\r\n                    const marginValue = parseInt(attrs[`@_w:${side}`], 10) / 20;\r\n                    if (!isNaN(marginValue)) styles.margin[side] = marginValue;\r\n                }\r\n            });\r\n        }\r\n        return styles;\r\n    }\r\n\r\n    static formatCssFromStyles(styles) {\r\n        if (!styles) return null;\r\n\r\n        let cssRules = [];\r\n        const { size, margin, units } = styles;\r\n\r\n        if (size.orientation === \"landscape\") {\r\n            cssRules.push(`size: landscape;`);\r\n        } else if (size.width && size.height) {\r\n            cssRules.push(`size: ${size.width}${units} ${size.height}${units};`);\r\n        }\r\n\r\n        Object.keys(margin).forEach(side => {\r\n            if (margin[side] !== null) {\r\n                cssRules.push(`margin-${side}: ${margin[side]}${units};`);\r\n            }\r\n        });\r\n\r\n        if (cssRules.length > 0) {\r\n            return `@page { ${cssRules.join(\" \")} }`;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getSectionStyles(sectPr) {\r\n        if (!sectPr) return \"\";\r\n\r\n        let style = \"\";\r\n        const colsNode = this.findChild(sectPr, \"w:cols\");\r\n        if (colsNode && colsNode[\":@\"]) {\r\n            const num = parseInt(colsNode[\":@\"][\"@_w:num\"], 10);\r\n            if (!isNaN(num) && num > 1) {\r\n                style += `column-count: ${num};`;\r\n                const space = colsNode[\":@\"][\"@_w:space\"];\r\n                if (space) {\r\n                    const spaceInPt = parseInt(space, 10) / 20;\r\n                    style += ` column-gap: ${spaceInPt}pt;`;\r\n                }\r\n            }\r\n        }\r\n        return style;\r\n    }\r\n\r\n    findChild(nodeArray, tagName) {\r\n        if (!nodeArray || !Array.isArray(nodeArray)) return null;\r\n        return nodeArray.find(child => Object.keys(child)[0] === tagName);\r\n    }\r\n\r\n    filterChildren(nodeArray, tagName) {\r\n        if (!nodeArray || !Array.isArray(nodeArray)) return [];\r\n        return nodeArray.filter(child => Object.keys(child)[0] === tagName);\r\n    }\r\n\r\n    getText(node) {\r\n        if (node && node[\"##text\"]) {\r\n            return Array.isArray(node[\"##text\"]) ? node[\"##text\"].join('') : node[\"##text\"];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    async loadRelationships() {\r\n        const relsFile = this.zip.file(\"word/_rels/document.xml.rels\");\r\n        if (relsFile) {\r\n            const xmlContent = await relsFile.async(\"string\");\r\n            const jsonObj = this.parser.parse(xmlContent);\r\n            const relationshipsRoot = jsonObj.find(node => node.Relationships);\r\n            if (!relationshipsRoot) return;\r\n\r\n            const relationshipsChildren = relationshipsRoot.Relationships;\r\n            this.relationships = {};\r\n\r\n            const relationshipNodes = this.filterChildren(relationshipsChildren, \"Relationship\");\r\n\r\n            relationshipNodes.forEach(relNode => {\r\n                const attrs = relNode[\":@\"];\r\n                if (attrs && attrs[\"@_Id\"]) {\r\n                    this.relationships[attrs[\"@_Id\"]] = {\r\n                        type: attrs[\"@_Type\"],\r\n                        target: attrs[\"@_Target\"]\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async loadNumbering() {\r\n        const numberingFile = this.zip.file(\"word/numbering.xml\");\r\n        if (!numberingFile) return;\r\n        const xmlContent = await numberingFile.async(\"string\");\r\n        const jsonObj = this.parser.parse(xmlContent);\r\n        const root = jsonObj.find(n => n[\"w:numbering\"]);\r\n        if (!root) return;\r\n        const numberingChildren = root[\"w:numbering\"];\r\n        const abstractNums = {};\r\n        this.filterChildren(numberingChildren, \"w:abstractNum\").forEach(abstractNumNode => {\r\n            const anId = abstractNumNode[\":@\"][\"@_w:abstractNumId\"];\r\n            const anChildren = abstractNumNode[\"w:abstractNum\"];\r\n            const lvlNodes = this.filterChildren(anChildren, \"w:lvl\");\r\n            const levels = {};\r\n            lvlNodes.forEach(lvlNode => {\r\n                const lvlChildren = lvlNode[\"w:lvl\"];\r\n                const ilvl = lvlNode[\":@\"][\"@_w:ilvl\"];\r\n                const numFmtNode = this.findChild(lvlChildren, \"w:numFmt\");\r\n                const lvlTextNode = this.findChild(lvlChildren, \"w:lvlText\");\r\n                const startNode = this.findChild(lvlChildren, \"w:start\");\r\n\r\n                const numFmt = numFmtNode?.[\":@\"]?.[\"@_w:val\"] || \"decimal\";\r\n                const lvlText = lvlTextNode?.[\":@\"]?.[\"@_w:val\"] || \"%1.\";\r\n                const start = startNode?.[\":@\"]?.[\"@_w:val\"] ? parseInt(startNode[\":@\"][\"@_w:val\"], 10) : 1;\r\n\r\n                levels[ilvl] = { numFmt, lvlText, start };\r\n            });\r\n            abstractNums[anId] = levels;\r\n        });\r\n        this.filterChildren(numberingChildren, \"w:num\").forEach(numNode => {\r\n            const numId = numNode[\":@\"][\"@_w:numId\"];\r\n            const numChildren = numNode[\"w:num\"];\r\n            const abstractNumIdNode = this.findChild(numChildren, \"w:abstractNumId\");\r\n            if (abstractNumIdNode && abstractNumIdNode[\":@\"]) {\r\n                const abstractId = abstractNumIdNode[\":@\"][\"@_w:val\"];\r\n                const abstractRef = abstractNums[abstractId];\r\n                if (!this.numbering) this.numbering = {};\r\n                this.numbering[numId] = abstractRef;\r\n            }\r\n        });\r\n    }\r\n\r\n    async processChildren(elementArray) {\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < elementArray.length; i++) {\r\n            const node = elementArray[i];\r\n            const nodeName = Object.keys(node)[0];\r\n            if (nodeName.startsWith(\":\") || nodeName === '##text') continue;\r\n\r\n            if (nodeName === 'w:p') {\r\n                const pChildren = node['w:p'];\r\n                const pPrNode = this.findChild(pChildren, \"w:pPr\");\r\n                const pPr = pPrNode ? pPrNode[\"w:pPr\"] : null;\r\n\r\n                let paragraphStyleDef = null;\r\n                if (pPr) {\r\n                    const pStyleNode = this.findChild(pPr, \"w:pStyle\");\r\n                    if (pStyleNode && pStyleNode[\":@\"]) {\r\n                        const styleId = pStyleNode[\":@\"][\"@_w:val\"];\r\n                        paragraphStyleDef = this.globalStyles[styleId];\r\n                    }\r\n                }\r\n\r\n                const content = await this.processParagraphContent(pChildren, paragraphStyleDef);\r\n                const pBdrNode = pPr ? this.findChild(pPr, \"w:pBdr\") : null;\r\n                const hasBottomBorder = pBdrNode && this.findChild(pBdrNode[\"w:pBdr\"], \"w:bottom\");\r\n                if (hasBottomBorder && content.trim() === \"\") {\r\n                    html += this.closeLists() + \"<hr>\";\r\n                    continue;\r\n                }\r\n\r\n                let numId = null;\r\n                let ilvl = null;\r\n\r\n                if (pPr) {\r\n                    let numPrNode = this.findChild(pPr, \"w:numPr\");\r\n\r\n                    if (!numPrNode && paragraphStyleDef && paragraphStyleDef.pPr) {\r\n                        numPrNode = this.findChild(paragraphStyleDef.pPr, \"w:numPr\");\r\n                    }\r\n\r\n                    if (numPrNode) {\r\n                        const numPr = numPrNode[\"w:numPr\"];\r\n                        const numIdNode = this.findChild(numPr, \"w:numId\");\r\n                        const ilvlNode = this.findChild(numPr, \"w:ilvl\");\r\n                        if (numIdNode && numIdNode[\":@\"] && ilvlNode && ilvlNode[\":@\"]) {\r\n                            numId = numIdNode[\":@\"][\"@_w:val\"];\r\n                            ilvl = ilvlNode[\":@\"][\"@_w:val\"];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (numId !== null && ilvl !== null) {\r\n                    html += this.handleListItem(numId, parseInt(ilvl, 10), content);\r\n                } else {\r\n                    html += this.closeLists();\r\n                    if (content.trim() === '' && !content.includes(' ')) {\r\n                        html += '<p> </p>';\r\n                    } else {\r\n                        html += await this.renderNonListParagraph(pChildren, content);\r\n                    }\r\n                }\r\n            } else if (nodeName === 'w:tbl') {\r\n                html += this.closeLists();\r\n                html += await this.processTable(node['w:tbl']);\r\n            } else if (nodeName === 'w:sectPr') { }\r\n        }\r\n        html += this.closeLists();\r\n        return html;\r\n    }\r\n\r\n    async processParagraphContent(pChildren, paragraphStyleDef) {\r\n        let content = \"\";\r\n        for (const childNode of pChildren) {\r\n            const tagName = Object.keys(childNode)[0];\r\n            if (tagName === \"w:r\") content += await this.processRun(childNode[\"w:r\"], paragraphStyleDef);\r\n            else if (tagName === \"w:hyperlink\") content += await this.processHyperlink(childNode);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    getListMeta(numId, level) {\r\n        const lvl = this.numbering?.[numId]?.[level];\r\n        if (!lvl) return { tag: 'ol', css: 'decimal', start: 1, lvlText: '%1.' };\r\n        if (lvl.numFmt === 'bullet') return { tag: 'ul', css: 'disc', start: lvl.start || 1, lvlText: lvl.lvlText };\r\n\r\n        return {\r\n            tag: 'ol',\r\n            css: DocxToHtmlConverter.NUMFMT_TO_CSS[lvl.numFmt] || 'decimal',\r\n            start: lvl.start || 1,\r\n            lvlText: lvl.lvlText\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gera o marcador textual da lista a partir do lvlText (%1, %2 ...) e dos contadores atuais.\r\n     */\r\n    formatListMarker(numId, level) {\r\n        const meta = this.getListMeta(numId, level);\r\n        let tpl = meta.lvlText || '%1.';\r\n\r\n        if (!this.listCounters[numId]) this.listCounters[numId] = [];\r\n\r\n        // Substitui %1, %2... pelos contadores (convertidos conforme numFmt de cada nível)\r\n        tpl = tpl.replace(/%(\\d+)/g, (_, n) => {\r\n            const idx = parseInt(n, 10) - 1;\r\n            const counterVal = this.listCounters[numId][idx] || 1;\r\n            const fmt = this.numbering?.[numId]?.[idx]?.numFmt || 'decimal';\r\n            return this.formatCounter(counterVal, fmt);\r\n        });\r\n\r\n        return tpl;\r\n    }\r\n\r\n    /**\r\n     * Converte um número para o formato exigido (roman, letter, decimal...).\r\n     */\r\n    formatCounter(value, fmt) {\r\n        switch (fmt) {\r\n            case 'lowerRoman': return this.toRoman(value).toLowerCase();\r\n            case 'upperRoman': return this.toRoman(value).toUpperCase();\r\n            case 'lowerLetter': return this.toAlpha(value).toLowerCase();\r\n            case 'upperLetter': return this.toAlpha(value).toUpperCase();\r\n            default: return String(value);\r\n        }\r\n    }\r\n\r\n    toRoman(num) {\r\n        const romans = [\r\n            ['M', 1000], ['CM', 900], ['D', 500], ['CD', 400],\r\n            ['C', 100], ['XC', 90], ['L', 50], ['XL', 40],\r\n            ['X', 10], ['IX', 9], ['V', 5], ['IV', 4], ['I', 1]\r\n        ];\r\n        let res = '';\r\n        for (const [r, v] of romans) {\r\n            while (num >= v) { res += r; num -= v; }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    toAlpha(num) {\r\n        let s = '';\r\n        while (num > 0) {\r\n            num--;\r\n            s = String.fromCharCode(65 + (num % 26)) + s;\r\n            num = Math.floor(num / 26);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    closeLists() {\r\n        let html = \"\";\r\n        while (this.listState.stack.length) {\r\n            const top = this.listState.stack.pop();\r\n            if (top.openLi) html += \"</li>\";\r\n            html += `</${top.type}>`;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    isDefaultMarker(meta) {\r\n        // usa o contador do navegador se o template é só \"%1.\" ou \"%1)\"\r\n        // e não há referência a níveis superiores (%2, %3...)\r\n        if (!meta || !meta.lvlText) return true;\r\n        const tpl = meta.lvlText.trim();\r\n        const onlyFirst = /^%1[.)]?$/.test(tpl);\r\n        const hasHigher = /%[2-9]/.test(tpl);\r\n        return onlyFirst && !hasHigher;\r\n    }\r\n\r\n    handleListItem(numId, level, content) {\r\n        let html = \"\";\r\n\r\n        const currentListDef = this.numbering?.[numId];\r\n\r\n        while (this.listState.stack.length > 0 && this.listState.stack[this.listState.stack.length - 1].level > level) {\r\n            const top = this.listState.stack.pop();\r\n            if (top.openLi) html += \"</li>\";\r\n            html += `</${top.type}>`;\r\n        }\r\n\r\n        const stackTop = this.listState.stack.length > 0 ? this.listState.stack[this.listState.stack.length - 1] : null;\r\n        const stackListDef = stackTop ? this.numbering?.[stackTop.numId] : null;\r\n\r\n        if (stackTop && stackTop.level === level && currentListDef !== stackListDef) {\r\n            const top = this.listState.stack.pop();\r\n            if (top.openLi) html += \"</li>\";\r\n            html += `</${top.type}>`;\r\n        }\r\n\r\n        while (this.listState.stack.length <= level) {\r\n            const newLevel = this.listState.stack.length;\r\n            const metaLvl = this.getListMeta(numId, newLevel);\r\n\r\n            if (!this.listCounters[numId]) this.listCounters[numId] = [];\r\n            if (typeof this.listCounters[numId][newLevel] !== 'number') {\r\n                this.listCounters[numId][newLevel] = metaLvl.start || 1;\r\n            }\r\n\r\n            const defaultMarker = this.isDefaultMarker(metaLvl);\r\n            let startAttr = \"\";\r\n            if (metaLvl.tag === \"ol\" && metaLvl.start > 1) startAttr = ` start=\"${metaLvl.start}\"`;\r\n\r\n            let styleAttr = \"\";\r\n            if (defaultMarker) {\r\n                // deixa o browser numerar\r\n                styleAttr = metaLvl.css ? ` style=\"list-style-type:${metaLvl.css};\"` : \"\";\r\n            } else {\r\n                // vamos imprimir o marcador manual → remove numeração do browser\r\n                styleAttr = ` style=\"list-style-type:none; padding-left:1.5em;\"`;\r\n            }\r\n\r\n            html += `<${metaLvl.tag}${startAttr}${styleAttr}>`;\r\n\r\n            this.listState.stack.push({ numId, level: newLevel, type: metaLvl.tag, openLi: false });\r\n        }\r\n\r\n        const container = this.listState.stack[level];\r\n        if (container.openLi) {\r\n            html += \"</li>\";\r\n        }\r\n\r\n        const meta = this.getListMeta(numId, level);\r\n        const defaultMarker = this.isDefaultMarker(meta);\r\n\r\n        if (defaultMarker) {\r\n            html += `<li>${content}`;\r\n        } else {\r\n            const marker = this.formatListMarker(numId, level);\r\n            html += `<li><span class=\"docx-marker\">${marker}</span> ${content}`;\r\n        }\r\n        container.openLi = true;\r\n\r\n        if (meta.tag === 'ol') {\r\n            if (!this.listCounters[numId]) this.listCounters[numId] = [];\r\n\r\n            this.listCounters[numId][level]++;\r\n\r\n            const numDef = this.numbering?.[numId];\r\n            if (numDef) {\r\n                for (let l = level + 1; l < Object.keys(numDef).length; l++) {\r\n                    const deeperMeta = this.getListMeta(numId, l);\r\n                    if (this.listCounters[numId]) {\r\n                        this.listCounters[numId][l] = deeperMeta.start || 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return html;\r\n    }\r\n\r\n    async renderNonListParagraph(pChildren, content) {\r\n        const pPrNode = this.findChild(pChildren, \"w:pPr\");\r\n        const pPr = pPrNode ? pPrNode[\"w:pPr\"] : null;\r\n        if (content.trim() === '') return '<p> </p>';\r\n\r\n        const pStyle = this.getParagraphStyle(pPr, pChildren);\r\n\r\n        if (pPr) {\r\n            const pStyleNode = this.findChild(pPr, \"w:pStyle\");\r\n            if (pStyleNode && pStyleNode[\":@\"]) {\r\n                const styleId = pStyleNode[\":@\"][\"@_w:val\"];\r\n\r\n                if (styleId.match(/^Heading[1-6]$/i) || styleId.match(/^Ttulo[1-6]$/i)) {\r\n                    const level = styleId.replace(/(heading|Ttulo)/i, '');\r\n                    return `<h${level}${pStyle}>${content}</h${level}>`;\r\n                } else if (styleId.match(/title/i)) {\r\n                    return `<h1${pStyle}>${content}</h1>`;\r\n                } else if (styleId.match(/quote/i)) {\r\n                    return `<blockquote${pStyle}>${content}</blockquote>`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return `<p${pStyle}>${content || ' '}</p>`;\r\n    }\r\n\r\n    getParagraphStyle(pPr, pChildren = null) {\r\n        const defaultPPr = this.docDefaults?.pPr || [];\r\n        const pStyleNode = pPr ? this.findChild(pPr, \"w:pStyle\") : null;\r\n        const styleId = pStyleNode ? pStyleNode[\":@\"][\"@_w:val\"] : null;\r\n        const styleDef = styleId ? this.globalStyles[styleId] : null;\r\n        const stylePPr = styleDef ? styleDef.pPr : [];\r\n\r\n        const directPPr = pPr || [];\r\n\r\n        const mergedPPr = this.mergeProperties(\r\n            this.mergeProperties(defaultPPr, stylePPr),\r\n            directPPr\r\n        );\r\n\r\n        let style = \"\";\r\n        if (mergedPPr) {\r\n            const jcNode = this.findChild(mergedPPr, \"w:jc\");\r\n            if (jcNode && jcNode[\":@\"]) {\r\n                const align = jcNode[\":@\"][\"@_w:val\"];\r\n                if ([\"left\", \"center\", \"right\", \"both\"].includes(align)) {\r\n                    style += `text-align: ${align === 'both' ? 'justify' : align};`;\r\n                }\r\n            }\r\n            const spacingNode = this.findChild(mergedPPr, \"w:spacing\");\r\n            if (spacingNode && spacingNode[\":@\"]) {\r\n                const attrs = spacingNode[\":@\"];\r\n                if (attrs[\"@_w:before\"]) {\r\n                    const beforeTwips = parseInt(attrs[\"@_w:before\"], 10);\r\n                    if (!isNaN(beforeTwips)) style += `margin-top: ${beforeTwips / 20}pt;`;\r\n                }\r\n                if (attrs[\"@_w:after\"]) {\r\n                    const afterTwips = parseInt(attrs[\"@_w:after\"], 10);\r\n                    if (!isNaN(afterTwips)) style += `margin-bottom: ${afterTwips / 20}pt;`;\r\n                }\r\n            }\r\n\r\n            const indNode = this.findChild(mergedPPr, \"w:ind\");\r\n            if (indNode && indNode[\":@\"]) {\r\n                const attrs = indNode[\":@\"];\r\n                if (attrs[\"@_w:left\"]) {\r\n                    const leftTwips = parseInt(attrs[\"@_w:left\"], 10);\r\n                    if (!isNaN(leftTwips)) style += `margin-left: ${leftTwips / 20}pt;`;\r\n                }\r\n                if (attrs[\"@_w:firstLine\"]) {\r\n                    const firstLineTwips = parseInt(attrs[\"@_w:firstLine\"], 10);\r\n                    if (!isNaN(firstLineTwips)) style += `text-indent: ${firstLineTwips / 20}pt;`;\r\n                }\r\n                if (attrs[\"@_w:hanging\"]) {\r\n                    const hangingTwips = parseInt(attrs[\"@_w:hanging\"], 10);\r\n                    if (!isNaN(hangingTwips)) style += `padding-left: ${hangingTwips / 20}pt; text-indent: -${hangingTwips / 20}pt;`;\r\n                }\r\n            }\r\n\r\n            const pBdrNode = this.findChild(mergedPPr, \"w:pBdr\");\r\n            if (pBdrNode) {\r\n                const pBdrChildren = pBdrNode[\"w:pBdr\"];\r\n                const bottomBdrNode = this.findChild(pBdrChildren, \"w:bottom\");\r\n                if (bottomBdrNode && bottomBdrNode[\":@\"]) {\r\n                    const attrs = bottomBdrNode[\":@\"];\r\n                    const size = parseInt(attrs[\"@_w:sz\"], 10) / 8;\r\n                    const space = parseInt(attrs[\"@_w:space\"], 10) / 20;\r\n                    const color = attrs[\"@_w:color\"] && attrs[\"@_w:color\"] !== \"auto\" ? `#${attrs[\"@_w:color\"]}` : 'black';\r\n                    const val = attrs[\"@_w:val\"];\r\n\r\n                    if (!isNaN(size) && val && val !== 'none') {\r\n                        style += `border-bottom: ${size}pt solid ${color}; padding-bottom: ${space}pt;`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.paragraphContainsFloatedImage(pChildren)) {\r\n            style += \"overflow: auto;\";\r\n        }\r\n\r\n        return style ? ` style=\"${style}\"` : \"\";\r\n    }\r\n\r\n    paragraphContainsFloatedImage(pChildren) {\r\n        if (!pChildren) return false;\r\n\r\n        for (const childNode of pChildren) {\r\n            if (childNode['w:r']) {\r\n                const rChildren = childNode['w:r'];\r\n                const drawingNode = this.findChild(rChildren, \"w:drawing\");\r\n                if (drawingNode) {\r\n                    const anchorNode = this.findChild(drawingNode[\"w:drawing\"], \"wp:anchor\");\r\n                    if (anchorNode) {\r\n                        const anchorChildren = anchorNode[\"wp:anchor\"];\r\n                        if (this.findChild(anchorChildren, 'wp:wrapSquare') ||\r\n                            this.findChild(anchorChildren, 'wp:wrapTight') ||\r\n                            this.findChild(anchorChildren, 'wp:wrapThrough')) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async processRun(rChildren, paragraphStyleDef) {\r\n\r\n        const drawingNode = this.findChild(rChildren, \"w:drawing\");\r\n        if (drawingNode) {\r\n            return await this.processDrawing(drawingNode[\"w:drawing\"]);\r\n        }\r\n\r\n        let contentHtml = \"\";\r\n        let hasActualText = false;\r\n\r\n        for (const childNode of rChildren) {\r\n            const tagName = Object.keys(childNode)[0];\r\n\r\n            if (tagName === 'w:t') {\r\n                let text = (childNode[\"w:t\"] || []).map(child => child[\"##text\"] || \"\").join('');\r\n                if (text) {\r\n                    hasActualText = true;\r\n                }\r\n                const attrs = childNode[\":@\"];\r\n                if (attrs && attrs[\"@_xml:space\"] === \"preserve\") {\r\n                    text = text\r\n                        .replace(/^ /, ' ')\r\n                        .replace(/ $/, ' ')\r\n                        .replace(/  /g, '  ');\r\n                }\r\n                contentHtml += text.replace(/&/g, \"&\").replace(/</g, \"<\").replace(/>/g, \">\");\r\n            } else if (tagName === 'w:br') {\r\n                contentHtml += \"<br>\";\r\n            }\r\n        }\r\n\r\n        if (!hasActualText && !contentHtml.includes('<br>')) {\r\n            return contentHtml.includes(\" \") ? ' ' : '';\r\n        }\r\n\r\n        const defaultRPr = this.docDefaults?.rPr || [];\r\n        const paragraphRPr = (paragraphStyleDef && paragraphStyleDef.rPr) ? paragraphStyleDef.rPr : [];\r\n\r\n        const rPrNode = this.findChild(rChildren, \"w:rPr\");\r\n        const directRPr = rPrNode ? rPrNode[\"w:rPr\"] : [];\r\n\r\n        const rStyleNode = this.findChild(directRPr, \"w:rStyle\");\r\n        const styleId = rStyleNode ? rStyleNode[\":@\"][\"@_w:val\"] : null;\r\n        const charStyleDef = styleId ? this.globalStyles[styleId] : null;\r\n\r\n        let linkedStyleRPr = [];\r\n        if (charStyleDef && charStyleDef.link && this.globalStyles[charStyleDef.link]) {\r\n            linkedStyleRPr = this.globalStyles[charStyleDef.link].rPr || [];\r\n        }\r\n\r\n        const charStyleRPr = charStyleDef ? charStyleDef.rPr : [];\r\n\r\n        let mergedRPr = this.mergeProperties(defaultRPr, paragraphRPr);\r\n        mergedRPr = this.mergeProperties(mergedRPr, linkedStyleRPr);\r\n        mergedRPr = this.mergeProperties(mergedRPr, charStyleRPr);\r\n        mergedRPr = this.mergeProperties(mergedRPr, directRPr);\r\n\r\n        let styleStart = \"\", styleEnd = \"\";\r\n        let inlineStyles = \"\";\r\n\r\n        if (mergedRPr) {\r\n            if (this.findChild(mergedRPr, \"w:b\")) { styleStart += \"<strong>\"; styleEnd = \"</strong>\" + styleEnd; }\r\n            if (this.findChild(mergedRPr, \"w:i\")) { styleStart += \"<em>\"; styleEnd = \"</em>\" + styleEnd; }\r\n\r\n            let decorationParts = [];\r\n            let decorationStyle = \"\";\r\n            let decorationColor = \"\";\r\n\r\n            const underlineNode = this.findChild(mergedRPr, \"w:u\");\r\n            if (underlineNode && underlineNode[\":@\"]) {\r\n                const val = underlineNode[\":@\"][\"@_w:val\"];\r\n                if (val && val !== \"none\") {\r\n                    decorationParts.push(\"underline\");\r\n                    if (val === \"double\") decorationStyle = \"double\";\r\n                    else if (val === \"wave\") decorationStyle = \"wavy\";\r\n\r\n                    const colorAttr = underlineNode[\":@\"][\"@_w:color\"];\r\n                    if (colorAttr && colorAttr !== \"auto\") {\r\n                        decorationColor = `#${colorAttr}`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const strikeNode = this.findChild(mergedRPr, \"w:strike\");\r\n            const dstrikeNode = this.findChild(mergedRPr, \"w:dstrike\");\r\n            if (strikeNode || dstrikeNode) {\r\n                decorationParts.push(\"line-through\");\r\n                if (dstrikeNode) {\r\n                    decorationStyle = \"double\";\r\n                }\r\n            }\r\n\r\n            if (decorationParts.length > 0) {\r\n                const fullDecoration = [decorationParts.join(' '), decorationStyle, decorationColor].filter(Boolean).join(' ');\r\n                inlineStyles += `text-decoration: ${fullDecoration};`;\r\n            }\r\n\r\n            const vertAlignNode = this.findChild(mergedRPr, \"w:vertAlign\");\r\n            if (vertAlignNode && vertAlignNode[\":@\"]) {\r\n                const val = vertAlignNode[\":@\"][\"@_w:val\"];\r\n                if (val === \"superscript\") { styleStart += \"<sup>\"; styleEnd = \"</sup>\" + styleEnd; }\r\n                else if (val === \"subscript\") { styleStart += \"<sub>\"; styleEnd = \"</sub>\" + styleEnd; }\r\n            }\r\n            const colorNode = this.findChild(mergedRPr, \"w:color\");\r\n            if (colorNode && colorNode[\":@\"]) {\r\n                let colorVal = colorNode[\":@\"][\"@_w:val\"];\r\n                if (colorVal && colorVal !== \"auto\") {\r\n                    inlineStyles += `color:#${colorVal};`;\r\n                }\r\n            }\r\n            const shdNode = this.findChild(mergedRPr, \"w:shd\");\r\n            if (shdNode && shdNode[\":@\"]) {\r\n                const fill = shdNode[\":@\"][\"@_w:fill\"];\r\n                if (fill && fill !== \"auto\" && fill !== \"clear\") {\r\n                    inlineStyles += `background-color:#${fill};`;\r\n                }\r\n            }\r\n            const highlightNode = this.findChild(mergedRPr, \"w:highlight\");\r\n            if (highlightNode && highlightNode[\":@\"]) {\r\n                let highlightVal = highlightNode[\":@\"][\"@_w:val\"];\r\n                const colorMap = { yellow: \"#ffff00\", green: \"#00ff00\", cyan: \"#00ffff\", magenta: \"#ff00ff\", blue: \"#0000ff\", red: \"#ff0000\", darkBlue: \"#00008b\", darkCyan: \"#008b8b\", darkMagenta: \"#8b008b\", darkRed: \"#8b0000\", darkYellow: \"#b5a42e\", darkGray: \"#a9a9a9\", lightGray: \"#d3d3d3\", black: \"#000000\", white: \"#ffffff\" };\r\n                const mapped = colorMap[highlightVal];\r\n                if (mapped) inlineStyles += `background-color:${mapped};`;\r\n            }\r\n            if (styleId === 'Hyperlink' && !inlineStyles.includes('text-decoration')) {\r\n                inlineStyles += \"text-decoration:underline;\";\r\n            }\r\n            const szNode = this.findChild(mergedRPr, \"w:sz\");\r\n            if (szNode && szNode[\":@\"]) {\r\n                const size = parseInt(szNode[\":@\"][\"@_w:val\"], 10);\r\n                if (!isNaN(size)) inlineStyles += `font-size:${size / 2}pt;`;\r\n            }\r\n\r\n            const positionNode = this.findChild(mergedRPr, \"w:position\");\r\n            if (positionNode && positionNode[\":@\"]) {\r\n                const pos = parseInt(positionNode[\":@\"][\"@_w:val\"], 10);\r\n                if (!isNaN(pos) && pos > 0) {\r\n                    inlineStyles += `padding-bottom: ${pos / 2}pt; display: inline-block; transform: translateY(${-pos / 2}pt);`;\r\n                }\r\n            }\r\n\r\n            if (this.findChild(mergedRPr, \"w:caps\")) { inlineStyles += `text-transform:uppercase;`; }\r\n            if (this.findChild(mergedRPr, \"w:smallCaps\")) { inlineStyles += `font-variant:small-caps;`; }\r\n\r\n            const spacingNode = this.findChild(mergedRPr, \"w:spacing\");\r\n            if (spacingNode && spacingNode[\":@\"]) {\r\n                const attrs = spacingNode[\":@\"];\r\n                let letterSpacing = \"\";\r\n                if (attrs[\"@_w:val\"]) {\r\n                    const twips = parseInt(attrs[\"@_w:val\"], 10);\r\n                    if (!isNaN(twips)) letterSpacing = (twips / 20).toFixed(2) + \"pt\";\r\n                }\r\n                if (letterSpacing) {\r\n                    if (inlineStyles.includes(\"letter-spacing\")) {\r\n                        inlineStyles = inlineStyles.replace(/letter-spacing:[^;]+;/, `letter-spacing:${letterSpacing};`);\r\n                    } else {\r\n                        inlineStyles += `letter-spacing:${letterSpacing};`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (inlineStyles) {\r\n            styleStart += `<span style=\"${inlineStyles}\">`; styleEnd = \"</span>\" + styleEnd;\r\n        }\r\n\r\n        return styleStart + contentHtml + styleEnd;\r\n    }\r\n\r\n    mapHyperlinkAnchor(hyperlinkNode) {\r\n        const hyperlinkChildren = hyperlinkNode[\"w:hyperlink\"];\r\n        const anchorAttr = hyperlinkNode[\":@\"] ? hyperlinkNode[\":@\"][\"@_w:anchor\"] : null;\r\n        if (!anchorAttr) return { hyperlinkChildren, anchorAttr, anchorDisplay: null, isExternal: false };\r\n        let anchorDisplay = null;\r\n        for (const child of hyperlinkChildren) {\r\n            const cName = Object.keys(child)[0];\r\n            if (cName === \"w:r\") {\r\n                const rChildren = child[\"w:r\"];\r\n                const tNode = this.findChild(rChildren, \"w:t\");\r\n                if (tNode) {\r\n                    anchorDisplay = this.getText(tNode[\"w:t\"][0]);\r\n                    if (anchorDisplay) break;\r\n                }\r\n            }\r\n        }\r\n        const isExternalLikeFile = anchorDisplay &&\r\n            (anchorDisplay.toLowerCase().includes(\".docx\") ||\r\n                anchorDisplay.toLowerCase().includes(\".pdf\") ||\r\n                anchorDisplay.toLowerCase().includes(\".doc\"));\r\n        return { hyperlinkChildren, anchorAttr, anchorDisplay, isExternal: isExternalLikeFile };\r\n    }\r\n\r\n    async processHyperlink(hyperlinkNode) {\r\n        if (!hyperlinkNode[\"w:hyperlink\"]) return \"\";\r\n        const rId = hyperlinkNode[\":@\"] ? hyperlinkNode[\":@\"][\"@_r:id\"] : null;\r\n        const { hyperlinkChildren, anchorAttr, anchorDisplay, isExternal } = this.mapHyperlinkAnchor(hyperlinkNode);\r\n        let anchorContent = \"\";\r\n        for (const child of hyperlinkChildren) {\r\n            const cName = Object.keys(child)[0];\r\n            if (cName === \"w:r\") anchorContent += await this.processRun(child[\"w:r\"]);\r\n        }\r\n        if (rId && this.relationships && this.relationships[rId]) {\r\n            const rel = this.relationships[rId];\r\n            if (rel.type.endsWith(\"/hyperlink\")) {\r\n                let href = rel.target;\r\n                if (href && !href.toLowerCase().startsWith(\"http\")) {\r\n                    if (isExternal) {\r\n                        const cleaned = this.extractAnchorFileName(anchorDisplay || \"\");\r\n                        href = `https://www.gov.br/seedoc/shared/${cleaned}`;\r\n                        anchorContent = anchorDisplay || cleaned || href;\r\n                    } else {\r\n                        href = `https://www.gov.br/seedoc/shared/${this.extractFileNameFromPath(rel.target)}`;\r\n                    }\r\n                }\r\n                return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener\">${anchorContent}</a>`;\r\n            }\r\n        }\r\n        if (anchorAttr) {\r\n            let href = `#${anchorAttr}`;\r\n            anchorContent = anchorDisplay || anchorContent;\r\n            return `<a href=\"${href}\">${anchorContent}</a>`;\r\n        }\r\n        return anchorContent;\r\n    }\r\n\r\n    async processDrawing(drawing) {\r\n        const anchorNode = this.findChild(drawing, \"wp:anchor\") || this.findChild(drawing, \"wp:inline\");\r\n        if (!anchorNode) return \"\";\r\n\r\n        const anchorOrInlineAttributes = anchorNode[':@'];\r\n        const isAnchor = !!this.findChild(drawing, \"wp:anchor\");\r\n        const anchorOrInline = anchorNode[\"wp:anchor\"] || anchorNode[\"wp:inline\"];\r\n\r\n        const graphicNode = this.findChild(anchorOrInline, \"a:graphic\");\r\n        if (!graphicNode) return \"\";\r\n        const graphicDataNode = this.findChild(graphicNode[\"a:graphic\"], \"a:graphicData\");\r\n        if (!graphicDataNode) return \"\";\r\n        const picNode = this.findChild(graphicDataNode[\"a:graphicData\"], \"pic:pic\");\r\n        if (!picNode) return \"\";\r\n\r\n        const pic = picNode[\"pic:pic\"];\r\n        const blipFillNode = this.findChild(pic, \"pic:blipFill\");\r\n        const blipNode = blipFillNode ? this.findChild(blipFillNode[\"pic:blipFill\"], \"a:blip\") : null;\r\n        const relAttributes = blipNode ? blipNode[\":@\"] : null;\r\n        const rId = relAttributes ? (relAttributes[\"@_r:embed\"] || relAttributes[\"@_r:link\"]) : null;\r\n        if (!rId) return \"\";\r\n\r\n        const nvPicPrNode = this.findChild(pic, \"pic:nvPicPr\");\r\n        const cNvPrNode = nvPicPrNode ? this.findChild(nvPicPrNode[\"pic:nvPicPr\"], \"pic:cNvPr\") : null;\r\n        const altText = cNvPrNode && cNvPrNode[\":@\"] ? (cNvPrNode[\":@\"][\"@_descr\"] || cNvPrNode[\":@\"][\"@_title\"]) : \"\";\r\n\r\n        const rel = rId ? this.relationships[rId] : null;\r\n        if (!rel || !rel.type.includes(\"image\")) return \"\";\r\n\r\n        const imagePath = `word/${rel.target}`;\r\n        const imageFile = this.zip.file(imagePath);\r\n        if (!imageFile) return \"\";\r\n\r\n        const base64 = await imageFile.async(\"base64\");\r\n        const mimeType = this.getMimeType(rel.target);\r\n\r\n        let styles = \"max-width:100%;height:auto;\";\r\n\r\n        if (isAnchor) {\r\n            const wrapSquare = this.findChild(anchorOrInline, 'wp:wrapSquare');\r\n            const wrapTopAndBottom = this.findChild(anchorOrInline, 'wp:wrapTopAndBottom');\r\n\r\n            if (wrapSquare) {\r\n                styles += \"float:left;\";\r\n            } else if (wrapTopAndBottom) {\r\n                styles += \"clear:both;\";\r\n            }\r\n\r\n            if (anchorOrInlineAttributes) {\r\n                const emuToPt = (emu) => emu / 12700;\r\n                const attrs = anchorOrInlineAttributes;\r\n\r\n                if (attrs['@_distL']) {\r\n                    styles += `margin-left: ${emuToPt(parseInt(attrs['@_distL'], 10))}pt;`;\r\n                }\r\n                if (attrs['@_distR']) {\r\n                    styles += `margin-right: ${emuToPt(parseInt(attrs['@_distR'], 10))}pt;`;\r\n                }\r\n                if (attrs['@_distT']) {\r\n                    styles += `margin-top: ${emuToPt(parseInt(attrs['@_distT'], 10))}pt;`;\r\n                }\r\n                if (attrs['@_distB']) {\r\n                    styles += `margin-bottom: ${emuToPt(parseInt(attrs['@_distB'], 10))}pt;`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return `<img src=\"data:${mimeType};base64,${base64}\" alt=\"${altText}\" style=\"${styles}\" />`;\r\n    }\r\n\r\n    parseWidth(widthNode) {\r\n        if (!widthNode || !widthNode[\":@\"]) return \"\";\r\n        const attrs = widthNode[\":@\"];\r\n        const type = attrs[\"@_w:type\"] || \"dxa\";\r\n        const val = parseInt(attrs[\"@_w:w\"], 10);\r\n        if (isNaN(val)) return \"\";\r\n        if (type === \"pct\") return `width: ${val / 50}%;`;\r\n        if (type === \"dxa\") return `width: ${val / 20}pt;`;\r\n        if (type === \"auto\") return \"width: auto;\";\r\n        return \"\";\r\n    }\r\n\r\n    parseBorder(borderDef) {\r\n        if (!borderDef || !borderDef[\":@\"]) return null;\r\n        const attrs = borderDef[\":@\"];\r\n        const val = attrs[\"@_w:val\"];\r\n        if (!val || val === \"none\" || val === \"nil\") return null;\r\n\r\n        const size = (parseInt(attrs[\"@_w:sz\"], 10) || 4) / 8;\r\n        const color = (attrs[\"@_w:color\"] && attrs[\"@_w:color\"] !== \"auto\") ? `#${attrs[\"@_w:color\"]}` : \"black\";\r\n        const styleMap = { single: 'solid', dashed: 'dashed', dotted: 'dotted', double: 'double' };\r\n        const style = styleMap[val] || val;\r\n        return `${size}pt ${style} ${color}`;\r\n    }\r\n\r\n    cssFromBorders(bordersNode) {\r\n        let css = \"\";\r\n        const borderTypes = [\"top\", \"left\", \"bottom\", \"right\"];\r\n        borderTypes.forEach(type => {\r\n            const borderDef = this.findChild(bordersNode[\"w:tblBorders\"], `w:${type}`);\r\n            const borderStyle = this.parseBorder(borderDef);\r\n            if (borderStyle) {\r\n                css += `border-${type}: ${borderStyle};`;\r\n            }\r\n        });\r\n        return css;\r\n    }\r\n\r\n    parseCellBorders(tcPr) {\r\n        const styles = {};\r\n        if (!tcPr) return styles;\r\n        const bordersNode = this.findChild(tcPr, \"w:tcBorders\");\r\n        if (!bordersNode) return styles;\r\n\r\n        const borderTypes = [\"top\", \"left\", \"bottom\", \"right\"];\r\n        borderTypes.forEach(type => {\r\n            const borderDef = this.findChild(bordersNode[\"w:tcBorders\"], `w:${type}`);\r\n            const borderStyle = this.parseBorder(borderDef);\r\n            if (borderStyle) {\r\n                styles[`border-${type}`] = borderStyle;\r\n            }\r\n        });\r\n        return styles;\r\n    }\r\n\r\n    async processTable(tblChildren) {\r\n        let directTblPrNode = this.findChild(tblChildren, \"w:tblPr\");\r\n        let directTblPr = directTblPrNode ? directTblPrNode[\"w:tblPr\"] : [];\r\n        let mergedTblPr = directTblPr;\r\n\r\n        const tblStyleNode = this.findChild(directTblPr, \"w:tblStyle\");\r\n        if (tblStyleNode && tblStyleNode[\":@\"]) {\r\n            const styleId = tblStyleNode[\":@\"][\"@_w:val\"];\r\n            const tblStyleDef = this.globalStyles[styleId];\r\n            if (tblStyleDef && tblStyleDef.tblPr) {\r\n                mergedTblPr = this.mergeProperties(tblStyleDef.tblPr, directTblPr);\r\n            }\r\n        }\r\n\r\n        let tableStyles = \"border-collapse: collapse;\";\r\n        const tblWNode = this.findChild(mergedTblPr, \"w:tblW\");\r\n        if (tblWNode) tableStyles += this.parseWidth(tblWNode);\r\n\r\n        let insideHStyle = null;\r\n        let insideVStyle = null;\r\n        const tblBordersNode = this.findChild(mergedTblPr, \"w:tblBorders\");\r\n        if (tblBordersNode) {\r\n            tableStyles += this.cssFromBorders(tblBordersNode);\r\n            const insideHDef = this.findChild(tblBordersNode[\"w:tblBorders\"], 'w:insideH');\r\n            insideHStyle = this.parseBorder(insideHDef);\r\n            const insideVDef = this.findChild(tblBordersNode[\"w:tblBorders\"], 'w:insideV');\r\n            insideVStyle = this.parseBorder(insideVDef);\r\n        }\r\n\r\n        let colgroupHtml = \"\";\r\n        const tblGridNode = this.findChild(tblChildren, \"w:tblGrid\");\r\n        if (tblGridNode) {\r\n            const gridColNodes = this.filterChildren(tblGridNode[\"w:tblGrid\"], \"w:gridCol\");\r\n            if (gridColNodes.length > 0) {\r\n                colgroupHtml += \"<colgroup>\";\r\n                for (const colNode of gridColNodes) {\r\n                    const widthStyle = this.parseWidth(colNode);\r\n                    colgroupHtml += `<col${widthStyle ? ` style=\"${widthStyle}\"` : \"\"}>`;\r\n                }\r\n                colgroupHtml += \"</colgroup>\";\r\n            }\r\n        }\r\n\r\n        let tableHtml = `<table border='1' style='${tableStyles}'>${colgroupHtml}`;\r\n        const trNodes = this.filterChildren(tblChildren, \"w:tr\");\r\n\r\n        for (let i = 0; i < trNodes.length; i++) {\r\n            const trNode = trNodes[i];\r\n            const trChildren = trNode[\"w:tr\"];\r\n            tableHtml += \"<tr>\";\r\n            const tcNodes = this.filterChildren(trChildren, \"w:tc\");\r\n\r\n            for (let j = 0; j < tcNodes.length; j++) {\r\n                const tcNode = tcNodes[j];\r\n                const tcChildren = tcNode[\"w:tc\"];\r\n                const tcPrNode = this.findChild(tcChildren, \"w:tcPr\");\r\n                const tcPr = tcPrNode ? tcPrNode[\"w:tcPr\"] : [];\r\n\r\n                if (tcPr) {\r\n                    const hMergeNode = this.findChild(tcPr, \"w:hMerge\");\r\n                    if (hMergeNode && (!hMergeNode[\":@\"] || hMergeNode[\":@\"][\"@_w:val\"] !== \"restart\")) {\r\n                        continue;\r\n                    }\r\n                    const vMergeNode = this.findChild(tcPr, \"w:vMerge\");\r\n                    if (vMergeNode && (!vMergeNode[\":@\"] || (vMergeNode[\":@\"] && vMergeNode[\":@\"][\"@_w:val\"] !== \"restart\"))) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                let attrs = \"\";\r\n                let cellStylesObj = { \"vertical-align\": \"top\", \"padding\": \"4px\" };\r\n\r\n                if (insideHStyle && i < trNodes.length - 1) {\r\n                    cellStylesObj['border-bottom'] = insideHStyle;\r\n                }\r\n                if (insideVStyle && j < tcNodes.length - 1) {\r\n                    cellStylesObj['border-right'] = insideVStyle;\r\n                }\r\n\r\n                if (tcPr) {\r\n                    const gridSpanNode = this.findChild(tcPr, \"w:gridSpan\");\r\n                    if (gridSpanNode && gridSpanNode[\":@\"]) {\r\n                        const colspan = parseInt(gridSpanNode[\":@\"][\"@_w:val\"], 10);\r\n                        if (!isNaN(colspan) && colspan > 1) attrs += ` colspan=\"${colspan}\"`;\r\n                    }\r\n\r\n                    const vMergeNode = this.findChild(tcPr, \"w:vMerge\");\r\n                    if (vMergeNode && vMergeNode[\":@\"] && vMergeNode[\":@\"][\"@_w:val\"] === \"restart\") {\r\n                        let rowspanCount = 1;\r\n                        for (let k = i + 1; k < trNodes.length; k++) {\r\n                            const nextTrChildren = trNodes[k][\"w:tr\"];\r\n                            const nextTcNodes = this.filterChildren(nextTrChildren, \"w:tc\");\r\n                            const cellInSameColumn = nextTcNodes[j];\r\n                            if (cellInSameColumn) {\r\n                                const nextTcChildren = cellInSameColumn[\"w:tc\"];\r\n                                const nextTcPrNode = this.findChild(nextTcChildren, \"w:tcPr\");\r\n                                const nextTcPr = nextTcPrNode ? nextTcPrNode[\"w:tcPr\"] : [];\r\n                                const nextVMerge = nextTcPr ? this.findChild(nextTcPr, \"w:vMerge\") : null;\r\n                                if (nextVMerge && (!nextVMerge[\":@\"] || (nextVMerge[\":@\"] && nextVMerge[\":@\"][\"@_w:val\"] !== \"restart\"))) {\r\n                                    rowspanCount++;\r\n                                } else {\r\n                                    break;\r\n                                }\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (rowspanCount > 1) {\r\n                            attrs += ` rowspan=\"${rowspanCount}\"`;\r\n                        }\r\n                    }\r\n\r\n                    const tcWNode = this.findChild(tcPr, 'w:tcW');\r\n                    if (tcWNode) {\r\n                        const widthStyle = this.parseWidth(tcWNode);\r\n                        if (widthStyle) cellStylesObj['width'] = widthStyle.replace('width:', '');\r\n                    }\r\n\r\n                    const shdNode = this.findChild(tcPr, \"w:shd\");\r\n                    if (shdNode && shdNode[\":@\"]) {\r\n                        const fill = shdNode[\":@\"][\"@_w:fill\"];\r\n                        if (fill && fill !== \"auto\" && fill !== \"clear\") {\r\n                            cellStylesObj['background-color'] = `#${fill}`;\r\n                        }\r\n                    }\r\n\r\n                    const explicitBorders = this.parseCellBorders(tcPr);\r\n                    Object.assign(cellStylesObj, explicitBorders);\r\n                }\r\n\r\n                const cellContent = await this.processChildren(tcChildren);\r\n                const styleString = Object.entries(cellStylesObj).map(([k, v]) => `${k}:${v}`).join(';');\r\n                tableHtml += `<td${attrs} style=\"${styleString}\">${cellContent || ' '}</td>`;\r\n            }\r\n            tableHtml += \"</tr>\";\r\n        }\r\n        tableHtml += \"</table>\";\r\n        return tableHtml;\r\n    }\r\n\r\n    getMimeType(fileName) {\r\n        const ext = fileName.split('.').pop().toLowerCase();\r\n        switch (ext) {\r\n            case 'png': return 'image/png';\r\n            case 'jpg': case 'jpeg': return 'image/jpeg';\r\n            case 'gif': return 'image/gif';\r\n            case 'bmp': return 'image/bmp';\r\n            case 'svg': return 'image/svg+xml';\r\n            case 'wmf': return 'image/wmf';\r\n            case 'emf': return 'image/emf';\r\n            default: return 'application/octet-stream';\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","names":["src_exports","__export","DocxToHtmlConverter","src_default","__toCommonJS","import_jszip","import_fast_xml_parser","_DocxToHtmlConverter","zip","ParserClass","Parser","DefaultXMLParser","arrayBuffer","JSZip","converter","baseProps","derivedProps","propsMap","prop","key","baseStyle","derivedStyle","stylesFile","xmlContent","jsonObj","stylesNode","docDefaultsNode","rPrDefaultNode","rPr","pPrDefaultNode","pPr","styleNodes","rawStyles","styleNode","attrs","styleId","styleChildren","pPrNode","rPrNode","tblPrNode","basedOnNode","linkNode","basedOnId","linkId","styleIds","styleData","resolvedStyle","path","parts","anchorText","fileName","options","file","documentNode","node","bodyNode","bodyChildren","pageStyles","pageStylesCss","lastSectPrNode","sections","currentSectionChildren","lastSectPr","child","nodeName","sectPrNode","htmlContent","section","sectionHtml","sectionStyle","styleAttr","sectPr","styles","pgSzNode","width","height","pgMarNode","side","marginValue","cssRules","size","margin","units","style","colsNode","num","space","spaceInPt","nodeArray","tagName","relsFile","relationshipsRoot","relationshipsChildren","relNode","numberingFile","root","n","numberingChildren","abstractNums","abstractNumNode","anId","anChildren","lvlNodes","levels","lvlNode","_a","_b","_c","lvlChildren","ilvl","numFmtNode","lvlTextNode","startNode","numFmt","lvlText","start","numNode","numId","numChildren","abstractNumIdNode","abstractId","abstractRef","elementArray","html","pChildren","paragraphStyleDef","pStyleNode","content","pBdrNode","numPrNode","numPr","numIdNode","ilvlNode","childNode","level","lvl","tpl","_","idx","counterVal","fmt","value","romans","res","r","v","s","top","meta","onlyFirst","hasHigher","currentListDef","stackTop","stackListDef","newLevel","metaLvl","defaultMarker","startAttr","container","marker","numDef","l","deeperMeta","pStyle","defaultPPr","styleDef","stylePPr","directPPr","mergedPPr","jcNode","align","spacingNode","beforeTwips","afterTwips","indNode","leftTwips","firstLineTwips","hangingTwips","pBdrChildren","bottomBdrNode","color","val","rChildren","drawingNode","anchorNode","anchorChildren","contentHtml","hasActualText","text","defaultRPr","paragraphRPr","directRPr","rStyleNode","charStyleDef","linkedStyleRPr","charStyleRPr","mergedRPr","styleStart","styleEnd","inlineStyles","decorationParts","decorationStyle","decorationColor","underlineNode","colorAttr","strikeNode","dstrikeNode","fullDecoration","vertAlignNode","colorNode","colorVal","shdNode","fill","highlightNode","highlightVal","mapped","szNode","positionNode","pos","letterSpacing","twips","hyperlinkNode","hyperlinkChildren","anchorAttr","anchorDisplay","tNode","isExternalLikeFile","rId","isExternal","anchorContent","rel","href","cleaned","drawing","anchorOrInlineAttributes","isAnchor","anchorOrInline","graphicNode","graphicDataNode","picNode","pic","blipFillNode","blipNode","relAttributes","nvPicPrNode","cNvPrNode","altText","imagePath","imageFile","base64","mimeType","wrapSquare","wrapTopAndBottom","emuToPt","emu","widthNode","type","borderDef","bordersNode","css","borderStyle","tcPr","tblChildren","directTblPrNode","directTblPr","mergedTblPr","tblStyleNode","tblStyleDef","tableStyles","tblWNode","insideHStyle","insideVStyle","tblBordersNode","insideHDef","insideVDef","colgroupHtml","tblGridNode","gridColNodes","colNode","widthStyle","tableHtml","trNodes","i","trChildren","tcNodes","j","tcChildren","tcPrNode","hMergeNode","vMergeNode","cellStylesObj","gridSpanNode","colspan","rowspanCount","k","nextTrChildren","cellInSameColumn","nextTcChildren","nextTcPrNode","nextTcPr","nextVMerge","tcWNode","explicitBorders","cellContent","styleString","__publicField","DocxToHtmlConverter","src_default","DocxToHtmlConverter"]}